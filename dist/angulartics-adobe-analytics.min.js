!function(window,angular){"use strict";angular.module("angulartics.adobe.analytics",["angulartics"]).config(["$analyticsProvider",function($analyticsProvider){$analyticsProvider.settings.pageTracking.trackRelativePath=!0,$analyticsProvider.settings.adobeA={properties:{eventClass:{},global:{},page:{}}},$analyticsProvider.registerPageTrack(function(path){var event={pageName:path};angular.extend(event,$analyticsProvider.settings.adobeA.properties.global,$analyticsProvider.settings.adobeA.properties.page),window.s&&window.s.t(event)}),$analyticsProvider.registerEventTrack(function(eventType,properties){if(window.s&&eventType){var events,eventLabel=eventType,adobeAprops=$analyticsProvider.settings.adobeA.properties,eventConfig=angular.extend({},adobeAprops.eventMap,adobeAprops.eventClass[eventType]),props={},linkTrackVars=[];eventConfig&&(eventConfig.eventLabel&&(eventLabel=eventConfig.eventLabel),events=properties.eventIds||eventConfig.eventIds,events&&(properties.events=events,properties.linkTrackEvents=events,linkTrackVars.unshift("events"),delete properties.eventIds),angular.forEach(eventConfig,function(adobeLabel,analyticsLabel){angular.isDefined(properties[analyticsLabel])&&(linkTrackVars.unshift(adobeLabel),properties[adobeLabel]=properties[analyticsLabel],delete properties[analyticsLabel])}),properties.linkTrackVars=linkTrackVars.join(",")),delete properties.eventType,angular.extend(props,adobeAprops.global,properties);var linkType="o";"DOWNLOAD"===eventLabel.toUpperCase()?linkType="d":"EXIT"===eventLabel.toUpperCase()&&(linkType="e"),window.s.tl(this,linkType,eventLabel,props)}}),$analyticsProvider.registerSetSuperProperties(function(props){$analyticsProvider.settings.adobeA.properties.global=props.global,$analyticsProvider.settings.adobeA.properties.eventClass=props.eventClass})}])}(window,window.angular);
//# sourceMappingURL=../dist/angulartics-adobe-analytics.min.js.map